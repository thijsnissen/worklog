{
  "openapi": "3.1.0",
  "info": {
    "title": "Worklog",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8080/api/v1",
      "description": "Worklog server"
    }
  ],
  "paths": {
    "/worklogs": {
      "get": {
        "tags": [
          "Worklogs"
        ],
        "summary": "Get all worklogs",
        "operationId": "getAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Worklogs"
        ],
        "summary": "Import all worklogs in the range between startInclusive and endInclusive",
        "operationId": "importInRange",
        "parameters": [
          {
            "name": "startInclusive",
            "in": "query",
            "description": "Start ISO local date-time without offset of the range to import",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endInclusive",
            "in": "query",
            "description": "End ISO local date-time without offset of the range to import",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportInRangeResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Worklogs"
        ],
        "summary": "Flush all worklogs",
        "operationId": "flush",
        "parameters": [],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/worklogs/export": {
      "post": {
        "tags": [
          "Worklogs"
        ],
        "summary": "Export worklogs by uuid",
        "operationId": "export",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExportByIdsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExportByIdsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/worklogs/delete": {
      "post": {
        "tags": [
          "Worklogs"
        ],
        "summary": "Delete worklogs by uuid",
        "operationId": "deleteByIds",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteByIdsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteByIdsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "GetAllResponse": {
        "properties": {
          "worklogs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Worklog"
            }
          }
        },
        "required": [
          "worklogs"
        ]
      },
      "Worklog": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "issueId": {
            "type": "integer",
            "format": "int64"
          },
          "issueKey": {
            "type": "string",
            "minLength": 1
          },
          "startInclusive": {
            "type": "string",
            "format": "date-time"
          },
          "endInclusive": {
            "type": "string",
            "format": "date-time"
          },
          "durationSeconds": {
            "type": "integer",
            "format": "int64"
          },
          "description": {
            "type": "string"
          },
          "exported": {
            "type": "boolean"
          }
        },
        "required": [
          "description",
          "durationSeconds",
          "endInclusive",
          "exported",
          "id",
          "issueId",
          "issueKey",
          "startInclusive"
        ]
      },
      "HttpError": {
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "minLength": 1
          },
          "message": {
            "type": "string",
            "minLength": 1
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "code",
          "errors",
          "id",
          "message",
          "status",
          "timestamp"
        ]
      },
      "ValidationError": {
        "properties": {
          "field": {
            "type": "string",
            "minLength": 1
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "field",
          "message"
        ]
      },
      "ImportInRangeResponse": {
        "properties": {
          "rowsAffected": {
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "rowsAffected"
        ]
      },
      "ExportByIdsResponse": {
        "properties": {
          "rowsAffected": {
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "rowsAffected"
        ]
      },
      "ExportByIdsRequest": {
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "minItems": 1
          }
        },
        "required": [
          "ids"
        ]
      },
      "DeleteByIdsResponse": {
        "properties": {
          "rowsAffected": {
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "rowsAffected"
        ]
      },
      "DeleteByIdsRequest": {
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "minItems": 1
          }
        },
        "required": [
          "ids"
        ]
      }
    }
  }
}